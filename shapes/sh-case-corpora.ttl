# imports: http://example.org/ontology/case-corpora
# imports: http://example.org/shapes/cito
# imports: http://example.org/shapes/dcat-us
# imports: http://example.org/shapes/owl-abox
# imports: http://example.org/shapes/sh-prov-o
# imports: http://example.org/shapes/sh-time
# imports: http://example.org/shapes/ssn

@prefix case-corpora: <http://example.org/ontology/case-corpora/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix drafting: <http://example.org/ontology/drafting/> .
@prefix mime: <https://www.iana.org/assignments/media-types/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pod: <https://project-open-data.cio.gov/v1.1/schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sh-case-corpora: <http://example.org/shapes/case-corpora/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix uco-action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix uco-core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/shapes/case-corpora>
	a owl:Ontology ;
	rdfs:comment "This ontology defines SHACL shapes to maintain data quality-control rules."@en ;
	owl:imports
		<http://example.org/ontology/case-corpora> ,
		<http://example.org/shapes/cito> ,
		<http://example.org/shapes/dcat-us> ,
		<http://example.org/shapes/owl-abox> ,
		<http://example.org/shapes/sh-prov-o> ,
		<http://example.org/shapes/sh-time> ,
		<http://example.org/shapes/ssn>
		;
	.

case-corpora:Catalog
	a sh:NodeShape ;
	sh:property [
		a sh:PropertyShape ;
		sh:message "Each dcat:Dataset (except the Catalog) in CASE-Corpora must have case-corpora:hasDatasetDirectory populated."@en ;
		sh:node [
			a sh:NodeShape ;
			sh:property [
				a sh:PropertyShape ;
				sh:minCount "1"^^xsd:integer ;
				sh:path case-corpora:hasDatasetDirectory ;
			] ;
		] ;
		sh:path dcat:dataset ;
	] ;
	sh:targetClass case-corpora:Catalog ;
	.

case-corpora:Dataset
	a sh:NodeShape ;
	sh:property
		[
			a sh:PropertyShape ;
			sh:class case-corpora:Distribution ;
			sh:description "This property shape is meant to encourage usage of the case-corpora:hasDistribution property, rather than its two super-properties dcat:distribution or uco-core:object.  The cardinality restriction matches what is required by the ContextualCompilation."@en ;
			sh:minCount "1"^^xsd:integer ;
			sh:path case-corpora:hasDistribution ;
		] ,
		[
			a sh:PropertyShape ;
			sh:class case-corpora:WebPage ;
			sh:description "CASE-Corpora requires a dataset have a landing page."@en ;
			sh:minCount "1"^^xsd:integer ;
			sh:nodeKind sh:IRI ;
			sh:path dcat:landingPage ;
		] ,
		[
			a sh:PropertyShape ;
			sh:description "A case-corpora:Dataset requires a dataset have the accessLevel 'public'.  If a non-public dataset is to be indexed, it should be classified as a dcat:Dataset instead of a case-corpora:Dataset."@en ;
			sh:hasValue "public" ;
			sh:path pod:accessLevel ;
		]
		;
	sh:sparql
		[
			a sh:SPARQLConstraint ;
			rdfs:comment "This constraint is meant to encourage usage of the case-corpora:hasDistribution property."@en ;
			sh:message "Each dcat:distribution assignment must have a uco-core:object assignment."@en ;
			sh:select """
				PREFIX dcat: <http://www.w3.org/ns/dcat#>
				PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
				SELECT $this (dcat:distribution AS ?path) ?value
				WHERE {
					$this dcat:distribution ?value .
					FILTER NOT EXISTS {
						$this uco-core:object ?value .
					}
				}
				""" ;
		] ,
		[
			a sh:SPARQLConstraint ;
			rdfs:comment "This constraint is meant to encourage usage of the case-corpora:hasDistribution property."@en ;
			sh:message "Each uco-core:object assignment must have a dcat:distribution assignment."@en ;
			sh:select """
				PREFIX dcat: <http://www.w3.org/ns/dcat#>
				PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
				SELECT $this (uco-core:object AS ?path) ?value
				WHERE {
					$this uco-core:object ?value .
					FILTER NOT EXISTS {
						$this dcat:distribution ?value .
					}
				}
			""" ;
		]
		;
	sh:targetClass case-corpora:Dataset ;
	.

case-corpora:Distribution
	a sh:NodeShape ;
	sh:property
		[
			a sh:PropertyShape ;
			rdfs:seeAlso <https://www.iana.org/assignments/media-types/application/octet-stream> ;
			sh:description "CASE-Corpora requests any referenced Distribution include one or more media types.  If none are known, use mime:application/octet-stream."@en ;
			sh:minCount "1"^^xsd:integer ;
			sh:path dcat:mediaType ;
			sh:severity sh:Warning ;
		] ,
		[
			a sh:PropertyShape ;
			sh:class case-corpora:IANAMediaType ;
			sh:description "When used, dcat:mediaType is constrained to members of the IANA Media Types registry."@en ;
			sh:path dcat:mediaType ;
		]
		;
	sh:targetClass case-corpora:Distribution ;
	.

case-corpora:DownloadableObject
	a sh:NodeShape ;
	sh:not [
		a sh:NodeShape ;
		sh:or (
			[
				a sh:NodeShape ;
				sh:class uco-observable:ObservableRelationship ;
			]
			[
				a sh:NodeShape ;
				sh:class uco-observable:URL ;
			]
		) ;
	] ;
	sh:property [
		a sh:PropertyShape ;
		sh:message "CASE-Corpora requires a DownloadableObject have a stated tie to a DownloadableRelation."@en ;
		sh:path [
			sh:inversePath uco-core:source ;
		] ;
		sh:qualifiedMinCount "1"^^xsd:integer ;
		sh:qualifiedValueShape [
			a sh:NodeShape ;
			sh:class case-corpora:DownloadableRelation ;
		] ;
	] ;
	sh:targetClass case-corpora:DownloadableObject ;
	.

case-corpora:DownloadableRelation
	a sh:NodeShape ;
	sh:property
		[
			a sh:PropertyShape ;
			sh:class case-corpora:DownloadableObject ;
			sh:path uco-core:source ;
		] ,
		[
			a sh:PropertyShape ;
			sh:class uco-observable:URL ;
			sh:message "CASE-Corpora requires a URL tied to a DownloadableRelation have its full value stored in the fullValue of a URLFacet."@en ;
			sh:path uco-core:target ;
			sh:property [
				a sh:PropertyShape ;
				sh:path uco-core:hasFacet ;
				sh:qualifiedMinCount "1"^^xsd:integer ;
				sh:qualifiedValueShape [
					a sh:NodeShape ;
					sh:class uco-observable:URLFacet ;
					sh:property [
						a sh:PropertyShape ;
						sh:minCount "1"^^xsd:integer ;
						sh:path uco-observable:fullValue ;
					] ;
				] ;
			] ;
		] ,
		[
			a sh:PropertyShape ;
			sh:hasValue "Downloadable_From" ;
			sh:path uco-core:kindOfRelationship ;
		] ,
		[
			a sh:PropertyShape ;
			sh:hasValue "true"^^xsd:boolean ;
			sh:path uco-core:isDirectional ;
		]
		;
	sh:targetClass case-corpora:DownloadableRelation ;
	.

drafting:FileHashQuality
	a sh:NodeShape ;
	sh:property [
		a sh:PropertyShape ;
		sh:class uco-observable:File ;
		sh:path drafting:isQualityOf ;
	] ;
	sh:targetClass drafting:FileHashQuality ;
	.

drafting:hasQuality-inverse-functional-shape
	a sh:PropertyShape ;
	sh:maxCount "1"^^xsd:integer ;
	sh:path [
		sh:inversePath drafting:isQualityOf ;
	] ;
	sh:targetObjectsOf drafting:hasQuality ;
	.

drafting:hasQuality-objects-shape
	a sh:NodeShape ;
	sh:class drafting:Quality ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf drafting:hasQuality ;
	.

drafting:hasQuality-subjects-shape
	a sh:NodeShape ;
	sh:class uco-core:UcoObject ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf drafting:hasQuality ;
	.

drafting:isAutomated-objects-shape
	a sh:NodeShape ;
	sh:datatype xsd:boolean ;
	sh:nodeKind sh:Literal ;
	sh:targetObjectsOf drafting:isAutomated ;
	.

drafting:isAutomated-subjects-shape
	a sh:NodeShape ;
	sh:class uco-action:Action ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf drafting:isAutomated ;
	.

drafting:isQualityOf-functional-shape
	a sh:PropertyShape ;
	sh:maxCount "1"^^xsd:integer ;
	sh:path drafting:isQualityOf ;
	sh:targetSubjectsOf drafting:isQualityOf ;
	.

drafting:isQualityOf-objects-shape
	a sh:NodeShape ;
	sh:class uco-core:UcoObject ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf drafting:isQualityOf ;
	.

drafting:isQualityOf-subjects-shape
	a sh:NodeShape ;
	sh:class drafting:Quality ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf drafting:isQualityOf ;
	.

sh-case-corpora:hasDatasetDirectory-objects-shape
	a sh:NodeShape ;
	sh:datatype xsd:string ;
	sh:description "The pattern for dataset directory names is lowercase alphanumeric ASCII characters, and hyphens.  The name should not start or end with a hyphen."@en ;
	sh:nodeKind sh:Literal ;
	sh:pattern "^[^-][0-9a-z-]+[^-]$" ;
	sh:targetObjectsOf case-corpora:hasDatasetDirectory ;
	.

sh-case-corpora:hasDatasetDirectory-subjects-shape
	a sh:NodeShape ;
	sh:class dcat:Dataset ;
	sh:targetSubjectsOf case-corpora:hasDatasetDirectory ;
	.

sh-case-corpora:hasDistribution-objects-shape
	a sh:NodeShape ;
	sh:class case-corpora:Distribution ;
	sh:targetObjectsOf case-corpora:hasDistribution ;
	.

sh-case-corpora:hasDistribution-subjects-shape
	a sh:NodeShape ;
	sh:class case-corpora:Dataset ;
	sh:targetSubjectsOf case-corpora:hasDistribution ;
	.

sh-case-corpora:hasDownloadURL-objects-shape
	a sh:NodeShape ;
	sh:class case-corpora:DownloadableObject ;
	sh:targetObjectsOf case-corpora:hasDownloadURL ;
	.

sh-case-corpora:hasDownloadURL-subjects-shape
	a sh:NodeShape ;
	sh:class case-corpora:Distribution ;
	sh:targetSubjectsOf case-corpora:hasDownloadURL ;
	.

uco-action:Action
	sh:property [
		a sh:PropertyShape ;
		sh:maxCount "1"^^xsd:integer ;
		sh:path drafting:isAutomated ;
	] ;
	.

uco-observable:File
	sh:property [
		a sh:PropertyShape ;
		sh:path drafting:hasQuality ;
		sh:qualifiedMaxCount "1"^^xsd:integer ;
		sh:qualifiedValueShape [
			a sh:NodeShape ;
			sh:class drafting:FileHashQuality ;
		] ;
	] ;
	.

