# imports: http://example.org/shapes/case-corpora

@prefix case-investigation: <https://ontology.caseontology.org/case/investigation/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sh-case-corpora-local: <http://example.org/shapes/case-corpora-local/> .
@prefix uco-action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix uco-core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix uco-types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/shapes/case-corpora-local>
	a owl:Ontology ;
	rdfs:comment "This file contains adjustments to upstream shapes graphs for CASE-Corpora.  This graph is not intended be re-used outside of CASE-Corpora.  Those interested in re-consuming CASE-Corpora shapes can generate and import the shapes.ttl file in this directory."@en ;
	owl:imports <http://example.org/shapes/case-corpora> ;
	.

sh-case-corpora-local:Facet-inherence-shape
	a sh:NodeShape ;
	sh:message "In CASE-Corpora, Facets must be linked to at least one UcoObject."@en ;
	sh:property [
		sh:minCount "1"^^xsd:integer ;
		sh:path [
			sh:inversePath uco-core:hasFacet ;
		] ;
	] ;
	sh:targetClass uco-core:Facet ;
	.

sh-case-corpora-local:Hash-inherence-shape
	a sh:NodeShape ;
	sh:message "In CASE-Corpora, Hashes must be linked to at least one Facet."@en ;
	sh:property [
		sh:minCount "1"^^xsd:integer ;
		sh:path [
			sh:inversePath uco-observable:hash ;
		] ;
	] ;
	sh:targetClass uco-types:Hash ;
	.

sh-case-corpora-local:InvestigativeAction-Provenance-accompaniment-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that when an InvestigativeAction uses an object, the object must be accompanied by a corresponding ProvenanceRecord."@en ;
	sh:sparql [
		sh:message "Input to investigative action does not include accompanying provenance record." ;
		sh:select """
		PREFIX case-investigation: <https://ontology.caseontology.org/case/investigation/>
		PREFIX uco-action: <https://ontology.unifiedcyberontology.org/uco/action/>
		PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
		SELECT $this ?value
		WHERE {
			$this uco-action:object ?value .
			FILTER NOT EXISTS {
				?value
					a case-investigation:ProvenanceRecord ;
					.
			}
			FILTER NOT EXISTS {
				$this
					uco-action:object ?nProvenanceRecord ;
					.
				?nProvenanceRecord
					a case-investigation:ProvenanceRecord ;
					uco-core:object ?value ;
					.
			}
		}
		""" ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

sh-case-corpora-local:InvestigativeAction-latest-ProvenanceRecord-usage-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that when an InvestigativeAction uses multiple provenance records containing the same object that is also input to the action, only the latest provenance record shall be linked if the earlier one contains no descriptive value of other objects that are also inputs to the action."@en ;
	sh:sparql [
		sh:message "Focus node uses value node, but value node contributes no additional provenance information over provenance record {$nLatterProvenanceRecord}."@en ;
		sh:select """
			SELECT $this ?value ?nLatterProvenanceRecord
			WHERE {
				$this
					prov:used
						?nObject1 ,
						?value ,
						?nLatterProvenanceRecord
						;
					.
				?value
					a case-investigation:ProvenanceRecord ;
					prov:hadMember ?nObject1 ;
					.
				?nLatterProvenanceRecord
					prov:wasDerivedFrom+ ?value ;
					prov:hadMember ?nObject1 ;
					.
				FILTER NOT EXISTS {
					$this prov:used ?nObject2 .
					?value prov:hadMember ?nObject2 .
					FILTER ( ?nObject1 != ?nObject2 )
					FILTER NOT EXISTS {
						?nLatterProvenanceRecord
							prov:hadMember ?nObject2 ;
							.
					}
				}
			}
		""" ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

sh-case-corpora-local:InvestigativeAction-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that any InvestigativeAction must generate a ProvenanceRecord."@en ;
	sh:property [
		a sh:PropertyShape ;
		sh:path uco-action:result ;
		sh:qualifiedMinCount "1"^^xsd:integer ;
		sh:qualifiedValueShape [
			a sh:NodeShape ;
			sh:class case-investigation:ProvenanceRecord ;
		] ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

uco-core:UcoThing-identifier-regex-shape
	sh:deactivated "true"^^xsd:boolean ;
	sh:description "This shape is deactivated for CASE-Corpora due to a data management decision to extend external IRIs as UCO concepts." ;
	.

