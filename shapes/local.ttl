# imports: http://example.org/shapes/case-corpora

@prefix case-investigation: <https://ontology.caseontology.org/case/investigation/> .
@prefix drafting: <http://example.org/ontology/drafting/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sh-case-corpora-local: <http://example.org/shapes/case-corpora-local/> .
@prefix sh-dcterms: <http://example.org/shapes/dcterms/> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix uco-action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix uco-core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix uco-owl: <https://ontology.unifiedcyberontology.org/owl/> .
@prefix uco-types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/shapes/case-corpora-local>
	a owl:Ontology ;
	rdfs:comment "This file contains adjustments to upstream shapes graphs for CASE-Corpora.  This graph is not intended be re-used outside of CASE-Corpora.  Those interested in re-consuming CASE-Corpora shapes can generate and import the shapes.ttl file in this directory."@en ;
	owl:imports <http://example.org/shapes/case-corpora> ;
	.

sh-case-corpora-local:Actuation-actsOnProperty-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that an Actuation describe a linked Quality."@en ;
	sh:property [
		a sh:PropertyShape ;
		sh:minCount "1"^^xsd:integer ;
		sh:path sosa:actsOnProperty ;
	] ;
	sh:sparql [
		sh:message "Actuation's hasFeatureOfInterest and actsOnProperty object are not associated."@en ;
		sh:select """
			PREFIX sosa: <http://www.w3.org/ns/sosa/>
			PREFIX ssn: <http://www.w3.org/ns/ssn/>
			SELECT $this
			WHERE {
				$this
					sosa:hasFeatureOfInterest ?nThing ;
					sosa:actsOnProperty ?nProperty ;
					.
				FILTER NOT EXISTS {
					?nThing ssn:hasProperty ?nProperty .
				}
			}
		""" ;
	] ;
	sh:targetClass sosa:Actuation ;
	.

sh-case-corpora-local:ContentDataFacet-mismatching-hash-shape
	a sh:NodeShape ;
	sh:description "In CASE-Corpora, Hashes must match between Facets and (SOSA) Observations, if recorded in both.  If an Observation conflicts, the Facet-housed Hash reference is to be removed."@en ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		sh:message "Conflict found between a Hash recorded in a Facet and as a result of an Observation on the same Observable Object.  Please remove the Hash reference that is this result's Value node from the Focus node."@en ;
		sh:select """
			PREFIX sosa: <http://www.w3.org/ns/sosa/>
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			PREFIX uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/>
			PREFIX uco-types: <https://ontology.unifiedcyberontology.org/uco/types/>
			SELECT $this ?value
			WHERE {
				?nObservableObject
					uco-core:hasFacet $this ;
					.
				$this
					uco-observable:hash ?value ;
					.
				?nObservation
					sosa:hasFeatureOfInterest ?nObservableObject ;
					sosa:hasResult ?nHashFromObservation ;
					.
				?value
					uco-types:hashMethod ?lMethod ;
					uco-types:hashValue ?lValueInFacet ;
					.
				?nHashFromObservation
					uco-types:hashMethod ?lMethod ;
					uco-types:hashValue ?lValueFromObservation ;
					.
				FILTER ( ?lValueInFacet != ?lValueFromObservation )
			}
		""" ;
	] ;
	sh:targetClass uco-observable:ContentDataFacet ;
	.

sh-case-corpora-local:Facet-inherence-shape
	a sh:NodeShape ;
	sh:message "In CASE-Corpora, Facets must be linked to at least one UcoObject."@en ;
	sh:property [
		sh:minCount "1"^^xsd:integer ;
		sh:path [
			sh:inversePath uco-core:hasFacet ;
		] ;
	] ;
	sh:targetClass uco-core:Facet ;
	.

sh-case-corpora-local:Hash-inherence-shape
	a sh:NodeShape ;
	sh:message "In CASE-Corpora, Hashes must be linked to at least one Facet or Observation."@en ;
	sh:property [
		sh:minCount "1"^^xsd:integer ;
		sh:path [
			sh:alternativePath (
				[
					sh:inversePath sosa:hasResult ;
				]
				[
					sh:inversePath uco-observable:hash ;
				]
			) ;
		] ;
	] ;
	sh:targetClass uco-types:Hash ;
	.

sh-case-corpora-local:InvestigativeAction-Provenance-accompaniment-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that when an InvestigativeAction uses an object, the object must be accompanied by a corresponding ProvenanceRecord."@en ;
	sh:sparql [
		sh:message "Input to investigative action does not include accompanying provenance record." ;
		sh:select """
		PREFIX case-investigation: <https://ontology.caseontology.org/case/investigation/>
		PREFIX uco-action: <https://ontology.unifiedcyberontology.org/uco/action/>
		PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
		SELECT $this ?value
		WHERE {
			$this uco-action:object ?value .
			FILTER NOT EXISTS {
				?value
					a case-investigation:ProvenanceRecord ;
					.
			}
			FILTER NOT EXISTS {
				$this
					uco-action:object ?nProvenanceRecord ;
					.
				?nProvenanceRecord
					a case-investigation:ProvenanceRecord ;
					uco-core:object ?value ;
					.
			}
		}
		""" ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

sh-case-corpora-local:InvestigativeAction-latest-ProvenanceRecord-usage-shape
	a sh:NodeShape ;
	rdfs:comment "This shape is deactivated, pending resolution of RDFLib Issue 709."@en ;
	rdfs:seeAlso <https://github.com/RDFLib/rdflib/issues/709> ;
	sh:deactivated "true"^^xsd:boolean ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that when an InvestigativeAction uses multiple provenance records containing the same object that is also input to the action, only the latest provenance record shall be linked if the earlier one contains no descriptive value of other objects that are also inputs to the action."@en ;
	sh:sparql [
		sh:message "Focus node uses value node, but value node contributes no additional provenance information over provenance record {$nLatterProvenanceRecord}."@en ;
		sh:select """
			PREFIX case-investigation: <https://ontology.caseontology.org/case/investigation/>
			PREFIX prov: <http://www.w3.org/ns/prov#>
			SELECT $this ?value ?nLatterProvenanceRecord
			WHERE {
				$this
					prov:used
						?nObject1 ,
						?value ,
						?nLatterProvenanceRecord
						;
					.
				?value
					a case-investigation:ProvenanceRecord ;
					prov:hadMember ?nObject1 ;
					.
				?nLatterProvenanceRecord
					prov:wasDerivedFrom+ ?value ;
					prov:hadMember ?nObject1 ;
					.
				FILTER NOT EXISTS {
					$this prov:used ?nObject2 .
					?value prov:hadMember ?nObject2 .
					FILTER ( ?nObject1 != ?nObject2 )
					FILTER NOT EXISTS {
						?nLatterProvenanceRecord
							prov:hadMember ?nObject2 ;
							.
					}
				}
			}
		""" ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

sh-case-corpora-local:InvestigativeAction-shape
	a sh:NodeShape ;
	rdfs:seeAlso <https://github.com/casework/CASE/issues/146> ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that any InvestigativeAction must generate a ProvenanceRecord.  This can be removed if CASE Issue 146 is accepted."@en ;
	sh:property [
		a sh:PropertyShape ;
		sh:path uco-action:result ;
		sh:qualifiedMinCount "1"^^xsd:integer ;
		sh:qualifiedValueShape [
			a sh:NodeShape ;
			sh:class case-investigation:ProvenanceRecord ;
		] ;
	] ;
	sh:targetClass case-investigation:InvestigativeAction ;
	.

sh-case-corpora-local:Observation-observedProperty-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that an Observation describe a linked Quality."@en ;
	sh:property [
		a sh:PropertyShape ;
		sh:minCount "1"^^xsd:integer ;
		sh:path sosa:observedProperty ;
	] ;
	sh:sparql [
		sh:message "Observation's hasFeatureOfInterest and observedProperty objects are not associated."@en ;
		sh:select """
			PREFIX sosa: <http://www.w3.org/ns/sosa/>
			PREFIX ssn: <http://www.w3.org/ns/ssn/>
			SELECT $this
			WHERE {
				$this
					sosa:hasFeatureOfInterest ?nThing ;
					sosa:observedProperty ?nProperty ;
					.
				FILTER NOT EXISTS {
					?nThing ssn:hasProperty ?nProperty .
				}
			}
		""" ;
	] ;
	sh:targetClass sosa:Observation ;
	.

sh-case-corpora-local:Quality-inherence-shape
	a sh:NodeShape ;
	sh:description "This shape defines and implements a CASE-Corpora requirement that a Quality must be attached to exactly one UcoObject."@en ;
	sh:or (
		[
			a sh:NodeShape ;
			sh:property [
				a sh:PropertyShape ;
				sh:minCount "1"^^xsd:integer ;
				sh:path [
					sh:inversePath drafting:hasQuality ;
				] ;
			] ;
		]
		[
			a sh:NodeShape ;
			sh:property [
				a sh:PropertyShape ;
				sh:minCount "1"^^xsd:integer ;
				sh:path drafting:isQualityOf ;
			] ;
		]
	) ;
	sh:targetClass drafting:Quality ;
	.

sh-case-corpora-local:rdf-Statement-shape
	a sh:NodeShape ;
	rdfs:comment "A citation of any portion of the OWL 2 specification on the appropriateness or inappropriateness of rdf:Statement in OWL would be welcome.  At the time of this writing, a reference was believed to exist, but could not be found.  The sh:description of this node houses an independent opinion on applicability."@en ;
	sh:description """This (no-op) shape serves as an anchor for describing that rdf:Statements are disallowed in CASE-Corpora due to a believed incompatibility with OWL 2 DL.  The belief stems in the property definition of rdf:object, as well as a scope of definition responsibility.

First, assuming authority to cast the property into OWL, that property cannot be either an owl:ObjectProperty or owl:DatatypeProperty, due to being general enough to support Identified Nodes (IRIs and BNodes) and Literals.  An AnnotationProperty would be most appropriate.  But then, for symmetry, rdf:subject and rdf:predicate should also be an AnnotationProperty.  This leaves the inferential value of rdf:Statement in question - neither a Statement, nor any subclass (for example, some ex:ContradictionStatement), could apply reasoning across the rdf: properties.

Second, if casting authority is not assumed, for maximal compatibility it would be the responsibility of the OWL specification to interpret the property types of rdf:object et al.  Otherwise, use of a base RDF property would become an OWL-level incompatibility if two knowledge bases were merged with different OWL property type assignments.

For all these reasons, CASE-Corpora disallows rdf:Statement."""@en ;
	sh:targetClass rdf:Statement ;
	.

sh-case-corpora-local:rdf-object-shape
	a sh:PropertyShape ;
	rdfs:seeAlso sh-case-corpora-local:rdf-Statement-shape ;
	sh:maxCount "0"^^xsd:integer ;
	sh:message "rdf:Statements are believed not compatible with OWL 2 DL."@en ;
	sh:path rdf:object ;
	sh:targetSubjectsOf rdf:object ;
	.

sh-case-corpora-local:rdf-predicate-shape
	a sh:PropertyShape ;
	rdfs:seeAlso sh-case-corpora-local:rdf-Statement-shape ;
	sh:maxCount "0"^^xsd:integer ;
	sh:message "rdf:Statements are believed not compatible with OWL 2 DL."@en ;
	sh:path rdf:predicate ;
	sh:targetSubjectsOf rdf:predicate ;
	.

sh-case-corpora-local:rdf-subject-shape
	a sh:PropertyShape ;
	rdfs:seeAlso sh-case-corpora-local:rdf-Statement-shape ;
	sh:maxCount "0"^^xsd:integer ;
	sh:message "rdf:Statements are believed not compatible with OWL 2 DL."@en ;
	sh:path rdf:subject ;
	sh:targetSubjectsOf rdf:subject ;
	.

sh-case-corpora-local:time-inXSDDate-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:inXSDDate ;
	.

sh-case-corpora-local:time-inXSDDateTime-deprecation-shape
	a sh:PropertyShape ;
	sh:maxCount "0"^^xsd:integer ;
	sh:path time:inXSDDateTime ;
	sh:targetSubjectsOf time:inXSDDateTime ;
	.

sh-case-corpora-local:time-inXSDDateTimeStamp-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:inXSDDateTimeStamp ;
	.

sh-case-corpora-local:time-inside-objects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf time:inside ;
	.

sh-case-corpora-local:time-inside-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:inside ;
	.

sh-case-corpora-local:time-intervalContains-objects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf time:intervalContains ;
	.

sh-case-corpora-local:time-intervalContains-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:intervalContains ;
	.

sh-case-corpora-local:time-intervalDuring-objects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf time:intervalDuring ;
	.

sh-case-corpora-local:time-intervalDuring-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:intervalDuring ;
	.

sh-case-corpora-local:time-intervalEquals-objects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf time:intervalEquals ;
	.

sh-case-corpora-local:time-intervalEquals-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:intervalEquals ;
	.

sh-case-corpora-local:time-intervalIn-objects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetObjectsOf time:intervalIn ;
	.

sh-case-corpora-local:time-intervalIn-subjects-shape
	a sh:NodeShape ;
	sh:nodeKind sh:IRI ;
	sh:targetSubjectsOf time:intervalIn ;
	.

sh-dcterms:contributor-suggested-objects-shape
	rdfs:comment "Deactivated due to requiring RDFS inferencing enabled to work with metadata attached to several upstream ontologies."@en ;
	sh:deactivated "true"^^xsd:boolean ;
	.

sh-dcterms:creator-suggested-objects-shape
	rdfs:comment "Deactivated due to requiring RDFS inferencing enabled to work with metadata attached to several upstream ontologies."@en ;
	sh:deactivated "true"^^xsd:boolean ;
	.

sh-dcterms:license-suggested-objects-shape
	rdfs:comment "Deactivated due to usage pattern of property in upstream ontologies."@en ;
	sh:deactivated "true"^^xsd:boolean ;
	.

sh-dcterms:publisher-suggested-objects-shape
	rdfs:comment "Deactivated due to requiring RDFS inferencing enabled to work with metadata attached to several upstream ontologies."@en ;
	sh:deactivated "true"^^xsd:boolean ;
	.

sh-dcterms:rights-suggested-objects-shape
	rdfs:comment "Deactivated due to usage pattern of property in upstream ontologies."@en ;
	sh:deactivated "true"^^xsd:boolean ;
	.

uco-owl:Restriction-shape
	rdfs:comment "TODO" ;
	rdfs:seeAlso
		<https://github.com/casework/CASE-Corpora/issues/63> ,
		<https://github.com/ucoProject/UCO/issues/591>
		;
	sh:deactivated "true"^^xsd:boolean ;
	.

uco-core:UcoThing-identifier-regex-shape
	sh:deactivated "true"^^xsd:boolean ;
	sh:description "This shape is deactivated for CASE-Corpora due to a data management decision to extend external IRIs as UCO concepts." ;
	.

